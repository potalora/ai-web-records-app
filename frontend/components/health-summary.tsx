"use client"

import { useState, useEffect } from "react"
import { Card } from "@/components/ui/card"
import { Skeleton } from "@/components/ui/skeleton"
import { AlertCircle } from "lucide-react"
import { Alert, AlertDescription } from "@/components/ui/alert"
import apiClient, { HealthSummaryData } from "@/lib/api-client"

export function HealthSummary() {
  const [summary, setSummary] = useState<HealthSummaryData | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchHealthSummary = async () => {
      try {
        setLoading(true)
        setError(null)
        const data = await apiClient.getHealthSummary()
        setSummary(data)
      } catch (err: any) {
        console.error('Error fetching health summary:', err)
        setError(err.detail || 'Failed to load health summary')
      } finally {
        setLoading(false)
      }
    }

    fetchHealthSummary()
  }, [])

  if (loading) {
    return (
      <div className="space-y-4">
        <Card className="p-4 bg-slate-50">
          <Skeleton className="h-4 w-20 mb-2" />
          <div className="space-y-2">
            <Skeleton className="h-3 w-full" />
            <Skeleton className="h-3 w-full" />
            <Skeleton className="h-3 w-3/4" />
          </div>
        </Card>
        <Card className="p-4 bg-slate-50">
          <Skeleton className="h-4 w-32 mb-2" />
          <div className="space-y-1">
            <Skeleton className="h-3 w-full" />
            <Skeleton className="h-3 w-full" />
            <Skeleton className="h-3 w-2/3" />
          </div>
        </Card>
      </div>
    )
  }

  if (error) {
    return (
      <Alert>
        <AlertCircle className="h-4 w-4" />
        <AlertDescription>{error}</AlertDescription>
      </Alert>
    )
  }

  if (!summary) {
    return (
      <Card className="p-4 bg-slate-50">
        <p className="text-sm text-muted-foreground text-center py-4">
          No health summary available. Upload medical records to generate an AI-powered health summary.
        </p>
      </Card>
    )
  }

  return (
    <div className="space-y-4">
      <Card className="p-4 bg-slate-50">
        <div className="flex justify-between items-start mb-2">
          <h3 className="font-medium">{summary.title}</h3>
          <div className="text-xs text-muted-foreground">
            Generated by {summary.provider}
          </div>
        </div>
        <p className="text-sm text-muted-foreground whitespace-pre-wrap">
          {summary.content}
        </p>
        <div className="mt-3 flex justify-between text-xs text-muted-foreground">
          <span>Based on {summary.recordsAnalyzed} medical records</span>
          <span>{new Date(summary.createdAt).toLocaleDateString()}</span>
        </div>
      </Card>
    </div>
  )
}
